@page "/AdminUsers"
@inject IRepository repository
@inject NavigationManager Navigation


<header>
    <h3>AdminUsuarios</h3>
</header>

<Paginacion CurrentPage="currentPage"
            TotalPages="totalPages"
            SelectedPage="SelectedPageAsync" />

<a class="btn btn-primary mb-3" href="/Usuarios/agregar">Nuevo Usuario</a>

<GenericList Mylist="USUARIOS">
    <Body>
        <table class="table table-striped">
            <thead>
                <tr class="table-bordered">
                    <th>Rut</th>
                    <th>Nombre</th>
                    <th>Tipo Usuario</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var usuario in USUARIOS!)
                {
                    <tr>
                        <td>
                            @usuario.ID_RUT-@usuario.DV_RUT
                        </td>
                        <td>
                            @usuario.NOMBRE
                        </td>
                        <td>
                            @usuario.TIPO_USUARIOS
                        </td>
                        <td>
                            <button>Eliminar</button>
                            <a href="/AdminUsers/ModUsers/@usuario.ID_RUT">Editar </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

    </Body>

</GenericList>

@code {
    public List<Usuario>? USUARIOS { get; set; }
    public List<TipoUsuario>? tipoUsuarios { get; set; }
    private int currentPage = 1;
    private int totalPages;

    protected override async Task OnInitializedAsync()
    {
        await LoadAsync();
    }

    private async Task SelectedPageAsync(int page)
    {
        currentPage = page;
        await LoadAsync(page);

    }



    private async Task LoadAsync(int page = 1)
    {
        string url1 = $"api/bomberos?={page}";
        string url2 = $"api/bomberos/totalPages";

        var vehiculoEResponse = await repository.Get<List<Usuario>>(url1);
        var vehiculoEResponse2 = await repository.Get<int>(url2);
        USUARIOS = vehiculoEResponse.Response!;
        totalPages = vehiculoEResponse2.Response!;
    }

}
