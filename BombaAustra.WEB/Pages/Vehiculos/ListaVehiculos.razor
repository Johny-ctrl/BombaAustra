@page "/ListVehi"
@inject IRepository repository
@inject NavigationManager Navigation

<h3>ListaVehiculos</h3>

<body>
    <input placeholder="Ingrese ID" />
    <button class="alert-primary">Buscar</button>

    @if (Equipos is null)
    {
        <p>Cargando</p>
    }
    else
    {
        <table class="table table-striped">
            <thead>
                <tr class="table-bordered">
                    <th>Id</th>
                    <th>Tipo</th>
                    <th>Nombre</th>
                    <th>Estado</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var equipo in Equipos!)
                {
                    <tr>
                        <td>
                            @equipo.ID_EQUIPO
                        </td>
                        <td>
                            @equipo.TIPO_EQUIPO
                        </td>
                        <td>
                            @equipo.NOMBRE_EQUIPO
                        </td>
                        <td>
                            @equipo.TIPO_EQUIPO
                        </td>
                        <td>
                            <button>Eliminar</button>
                            <button class="btn-warning">Editar</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

    }
</body>

@code {
    
    private List<Equipo>? Equipos { get; set; }
    private List<TipoEquipo>? tipoEquipos { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var EquipoResponse = await repository.Get<List<Equipo>>("api/Equipos");//Devuelve la lista de usuario
        Equipos = EquipoResponse.Response;
        var tipoEResponse = await repository.Get<List<TipoEquipo>>("/api/TipoEquipo");
        tipoEquipos = tipoEResponse.Response;
    }


}
